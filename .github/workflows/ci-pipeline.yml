name: build-and-publish

on:
  push:
    branches:
      - main
      - developer
  pull_request:
    branches:
      - main
      - developer

env:
  ECR_REPOSITORY: tech-challenge-application
  AWS_REGION: us-east-1
permissions:
  id-token: write
  contents: read

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    environment: secrets

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Configurar o JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      - name: Rodar Testes e Construir a Aplicação
        run: mvn clean package

      # Sobe o artefato .jar
      - name: Upload de Artefato
        uses: actions/upload-artifact@v4
        with:
          name: built-jar
          path: target/*.jar

  publish_to_aws:
    runs-on: ubuntu-latest
    needs: build_and_test
    environment: secrets

    # Esta job só é executada em push para a branch main
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4
      
      # Baixa o artefato .jar
      - name: Download de Artefato
        uses: actions/download-artifact@v4
        with:
          name: built-jar
          path: target/
      
      - name: Configurar Credenciais da AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Fazer Login no Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Construir e Publicar Imagem
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name challenge --region ${{ env.AWS_REGION }}

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f ${GITHUB_WORKSPACE}/k8s/deployment.yml
          kubectl rollout status deployment/challenge